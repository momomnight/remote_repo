#include "Type/BlueprintTypeEType.h"

//const FName FPC_Public::PC_Default(TEXT("Default"));
const FName FPC_Public::PC_Default = NAME_None;
const FName FPC_Public::PC_Exec(TEXT("exec"));
const FName FPC_Public::PC_Boolean(TEXT("bool"));
const FName FPC_Public::PC_Byte(TEXT("byte"));
const FName FPC_Public::PC_Class(TEXT("class"));
const FName FPC_Public::PC_Int(TEXT("int"));
const FName FPC_Public::PC_Int64(TEXT("int64"));
const FName FPC_Public::PC_Float(TEXT("float"));
const FName FPC_Public::PC_Double(TEXT("double"));
const FName FPC_Public::PC_Real(TEXT("real"));
const FName FPC_Public::PC_Name(TEXT("name"));
const FName FPC_Public::PC_Delegate(TEXT("delegate"));
const FName FPC_Public::PC_MCDelegate(TEXT("mcdelegate"));
const FName FPC_Public::PC_Object(TEXT("object"));
const FName FPC_Public::PC_Interface(TEXT("interface"));
const FName FPC_Public::PC_String(TEXT("string"));
const FName FPC_Public::PC_Text(TEXT("text"));
const FName FPC_Public::PC_Struct(TEXT("struct"));
const FName FPC_Public::PC_Wildcard(TEXT("wildcard"));
const FName FPC_Public::PC_FieldPath(TEXT("fieldpath"));
const FName FPC_Public::PC_Enum(TEXT("enum"));
const FName FPC_Public::PC_SoftObject(TEXT("softobject"));
const FName FPC_Public::PC_SoftClass(TEXT("softclass"));
const FName FPC_Public::PSC_Self(TEXT("self"));
const FName FPC_Public::PSC_Index(TEXT("index"));
const FName FPC_Public::PSC_Bitmask(TEXT("bitmask"));
const FName FPC_Public::PN_Execute(TEXT("execute"));
const FName FPC_Public::PN_Then(TEXT("then"));
const FName FPC_Public::PN_Completed(TEXT("Completed"));
const FName FPC_Public::PN_DelegateEntry(TEXT("delegate"));
const FName FPC_Public::PN_EntryPoint(TEXT("EntryPoint"));
const FName FPC_Public::PN_Self(TEXT("self"));
const FName FPC_Public::PN_Else(TEXT("else"));
const FName FPC_Public::PN_Loop(TEXT("loop"));
const FName FPC_Public::PN_After(TEXT("after"));
const FName FPC_Public::PN_ReturnValue(TEXT("ReturnValue"));
const FName FPC_Public::PN_ObjectToCast(TEXT("Object"));
const FName FPC_Public::PN_Condition(TEXT("Condition"));
const FName FPC_Public::PN_Start(TEXT("Start"));
const FName FPC_Public::PN_Stop(TEXT("Stop"));
const FName FPC_Public::PN_Index(TEXT("Index"));
const FName FPC_Public::PN_Item(TEXT("Item"));
const FName FPC_Public::PN_CastSucceeded(TEXT("then"));
const FName FPC_Public::PN_CastFailed(TEXT("CastFailed"));
const FString FPC_Public::PN_CastedValuePrefix(TEXT("As"));
const FName FPC_Public::FN_UserConstructionScript(TEXT("UserConstructionScript"));
const FName FPC_Public::FN_ExecuteUbergraphBase(TEXT("ExecuteUbergraph"));